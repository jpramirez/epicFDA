// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FoodEvent.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Message FoodEvent holds the structure for json file
type FoodEvent struct {
	FoodEventID              string   `protobuf:"bytes,1,opt,name=FoodEventID,proto3" json:"FoodEventID,omitempty"`
	Classification           string   `protobuf:"bytes,2,opt,name=classification,proto3" json:"classification,omitempty"`
	CenterClassificationDate string   `protobuf:"bytes,3,opt,name=center_classification_date,json=centerClassificationDate,proto3" json:"center_classification_date,omitempty"`
	ReportDate               string   `protobuf:"bytes,4,opt,name=report_date,json=reportDate,proto3" json:"report_date,omitempty"`
	PostalCode               string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	TerminationDate          string   `protobuf:"bytes,6,opt,name=termination_date,json=terminationDate,proto3" json:"termination_date,omitempty"`
	RecallInitiationDate     string   `protobuf:"bytes,7,opt,name=recall_initiation_date,json=recallInitiationDate,proto3" json:"recall_initiation_date,omitempty"`
	RecallNumber             string   `protobuf:"bytes,8,opt,name=recall_number,json=recallNumber,proto3" json:"recall_number,omitempty"`
	City                     string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	MoreCodeInfo             string   `protobuf:"bytes,10,opt,name=more_code_info,json=moreCodeInfo,proto3" json:"more_code_info,omitempty"`
	EventId                  string   `protobuf:"bytes,11,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	DistributionPattern      string   `protobuf:"bytes,12,opt,name=distribution_pattern,json=distributionPattern,proto3" json:"distribution_pattern,omitempty"`
	Openfda                  string   `protobuf:"bytes,13,opt,name=openfda,proto3" json:"openfda,omitempty"`
	RecallingFirm            string   `protobuf:"bytes,14,opt,name=recalling_firm,json=recallingFirm,proto3" json:"recalling_firm,omitempty"`
	VoluntaryMandated        string   `protobuf:"bytes,15,opt,name=voluntary_mandated,json=voluntaryMandated,proto3" json:"voluntary_mandated,omitempty"`
	State                    string   `protobuf:"bytes,16,opt,name=state,proto3" json:"state,omitempty"`
	ReasonForRecall          string   `protobuf:"bytes,17,opt,name=reason_for_recall,json=reasonForRecall,proto3" json:"reason_for_recall,omitempty"`
	InitialFirmNotification  string   `protobuf:"bytes,18,opt,name=initial_firm_notification,json=initialFirmNotification,proto3" json:"initial_firm_notification,omitempty"`
	Status                   string   `protobuf:"bytes,19,opt,name=status,proto3" json:"status,omitempty"`
	ProductType              string   `protobuf:"bytes,20,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Country                  string   `protobuf:"bytes,21,opt,name=country,proto3" json:"country,omitempty"`
	ProductDescription       string   `protobuf:"bytes,22,opt,name=product_description,json=productDescription,proto3" json:"product_description,omitempty"`
	CodeInfo                 string   `protobuf:"bytes,23,opt,name=code_info,json=codeInfo,proto3" json:"code_info,omitempty"`
	Address_1                string   `protobuf:"bytes,24,opt,name=address_1,json=address1,proto3" json:"address_1,omitempty"`
	Address_2                string   `protobuf:"bytes,25,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	ProductQuantity          string   `protobuf:"bytes,26,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *FoodEvent) Reset()         { *m = FoodEvent{} }
func (m *FoodEvent) String() string { return proto.CompactTextString(m) }
func (*FoodEvent) ProtoMessage()    {}
func (*FoodEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_884d35be91b9b723, []int{0}
}

func (m *FoodEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FoodEvent.Unmarshal(m, b)
}
func (m *FoodEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FoodEvent.Marshal(b, m, deterministic)
}
func (m *FoodEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FoodEvent.Merge(m, src)
}
func (m *FoodEvent) XXX_Size() int {
	return xxx_messageInfo_FoodEvent.Size(m)
}
func (m *FoodEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FoodEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FoodEvent proto.InternalMessageInfo

func (m *FoodEvent) GetFoodEventID() string {
	if m != nil {
		return m.FoodEventID
	}
	return ""
}

func (m *FoodEvent) GetClassification() string {
	if m != nil {
		return m.Classification
	}
	return ""
}

func (m *FoodEvent) GetCenterClassificationDate() string {
	if m != nil {
		return m.CenterClassificationDate
	}
	return ""
}

func (m *FoodEvent) GetReportDate() string {
	if m != nil {
		return m.ReportDate
	}
	return ""
}

func (m *FoodEvent) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *FoodEvent) GetTerminationDate() string {
	if m != nil {
		return m.TerminationDate
	}
	return ""
}

func (m *FoodEvent) GetRecallInitiationDate() string {
	if m != nil {
		return m.RecallInitiationDate
	}
	return ""
}

func (m *FoodEvent) GetRecallNumber() string {
	if m != nil {
		return m.RecallNumber
	}
	return ""
}

func (m *FoodEvent) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *FoodEvent) GetMoreCodeInfo() string {
	if m != nil {
		return m.MoreCodeInfo
	}
	return ""
}

func (m *FoodEvent) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *FoodEvent) GetDistributionPattern() string {
	if m != nil {
		return m.DistributionPattern
	}
	return ""
}

func (m *FoodEvent) GetOpenfda() string {
	if m != nil {
		return m.Openfda
	}
	return ""
}

func (m *FoodEvent) GetRecallingFirm() string {
	if m != nil {
		return m.RecallingFirm
	}
	return ""
}

func (m *FoodEvent) GetVoluntaryMandated() string {
	if m != nil {
		return m.VoluntaryMandated
	}
	return ""
}

func (m *FoodEvent) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *FoodEvent) GetReasonForRecall() string {
	if m != nil {
		return m.ReasonForRecall
	}
	return ""
}

func (m *FoodEvent) GetInitialFirmNotification() string {
	if m != nil {
		return m.InitialFirmNotification
	}
	return ""
}

func (m *FoodEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FoodEvent) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *FoodEvent) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *FoodEvent) GetProductDescription() string {
	if m != nil {
		return m.ProductDescription
	}
	return ""
}

func (m *FoodEvent) GetCodeInfo() string {
	if m != nil {
		return m.CodeInfo
	}
	return ""
}

func (m *FoodEvent) GetAddress_1() string {
	if m != nil {
		return m.Address_1
	}
	return ""
}

func (m *FoodEvent) GetAddress_2() string {
	if m != nil {
		return m.Address_2
	}
	return ""
}

func (m *FoodEvent) GetProductQuantity() string {
	if m != nil {
		return m.ProductQuantity
	}
	return ""
}

func init() {
	proto.RegisterType((*FoodEvent)(nil), "v1.FoodEvent")
}

func init() { proto.RegisterFile("FoodEvent.proto", fileDescriptor_884d35be91b9b723) }

var fileDescriptor_884d35be91b9b723 = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0x4d, 0x6f, 0x13, 0x3d,
	0x10, 0xc7, 0xd5, 0x3e, 0x6d, 0x93, 0x4c, 0xde, 0x9a, 0x49, 0x9e, 0xd4, 0x69, 0x0f, 0x94, 0x57,
	0x01, 0x12, 0xa0, 0x14, 0x4e, 0x88, 0x5b, 0x43, 0xa4, 0x1c, 0xa8, 0xa0, 0xe2, 0x6e, 0x39, 0x6b,
	0x2f, 0xb2, 0xb4, 0x6b, 0x2f, 0x5e, 0x6f, 0xa4, 0x7c, 0x54, 0xbe, 0x0d, 0xda, 0xb1, 0x93, 0x6c,
	0xb8, 0x65, 0xfe, 0xbf, 0xdf, 0xac, 0x47, 0x63, 0x07, 0x86, 0x4b, 0x6b, 0xe5, 0xd7, 0x8d, 0x32,
	0xfe, 0x7d, 0xe1, 0xac, 0xb7, 0x78, 0xba, 0x99, 0x3f, 0xfb, 0xd3, 0x82, 0xce, 0x3e, 0xc7, 0x5b,
	0xe8, 0xee, 0x8b, 0xd5, 0x82, 0x9d, 0xdc, 0x9e, 0xbc, 0xee, 0x3c, 0x36, 0x23, 0x7c, 0x05, 0x83,
	0x24, 0x13, 0x65, 0xa9, 0x53, 0x9d, 0x08, 0xaf, 0xad, 0x61, 0xa7, 0x24, 0xfd, 0x93, 0xe2, 0x17,
	0xb8, 0x4e, 0x94, 0xf1, 0xca, 0xf1, 0x63, 0xc0, 0xa5, 0xf0, 0x8a, 0xfd, 0x47, 0x3d, 0x2c, 0x18,
	0xf7, 0x47, 0xc2, 0x42, 0x78, 0x85, 0x4f, 0xa0, 0xeb, 0x54, 0x61, 0x9d, 0x0f, 0xfa, 0x19, 0xe9,
	0x10, 0xa2, 0x9d, 0x50, 0xd8, 0xd2, 0x8b, 0x8c, 0x27, 0x56, 0x2a, 0x76, 0x1e, 0x84, 0x10, 0xdd,
	0x5b, 0xa9, 0xf0, 0x0d, 0x5c, 0x7a, 0xe5, 0x72, 0x6d, 0x1a, 0xa7, 0x5e, 0x90, 0x35, 0x6c, 0xe4,
	0xf4, 0xad, 0x4f, 0x30, 0x75, 0x2a, 0x11, 0x59, 0xc6, 0xb5, 0xd1, 0x5e, 0x37, 0x1a, 0x5a, 0xd4,
	0x30, 0x09, 0x74, 0xb5, 0x87, 0xd4, 0xf5, 0x1c, 0xfa, 0xb1, 0xcb, 0x54, 0xf9, 0x5a, 0x39, 0xd6,
	0x26, 0xb9, 0x17, 0xc2, 0x07, 0xca, 0x10, 0xe1, 0x2c, 0xd1, 0x7e, 0xcb, 0x3a, 0xc4, 0xe8, 0x37,
	0xbe, 0x80, 0x41, 0x6e, 0x9d, 0xa2, 0xc1, 0xb9, 0x36, 0xa9, 0x65, 0x10, 0x3a, 0xeb, 0xb4, 0x9e,
	0x7d, 0x65, 0x52, 0x8b, 0x33, 0x68, 0xab, 0x7a, 0xe5, 0x5c, 0x4b, 0xd6, 0x25, 0xde, 0xa2, 0x7a,
	0x25, 0x71, 0x0e, 0x13, 0xa9, 0x4b, 0xef, 0xf4, 0xba, 0xa2, 0x51, 0x0b, 0xe1, 0xbd, 0x72, 0x86,
	0xf5, 0x48, 0x1b, 0x37, 0xd9, 0xf7, 0x80, 0x90, 0x41, 0xcb, 0x16, 0xca, 0xa4, 0x52, 0xb0, 0x7e,
	0xf8, 0x58, 0x2c, 0xf1, 0x25, 0x0c, 0xc2, 0xc4, 0xda, 0xfc, 0xe2, 0xa9, 0x76, 0x39, 0x1b, 0x90,
	0xd0, 0xdf, 0xa7, 0x4b, 0xed, 0x72, 0x7c, 0x07, 0xb8, 0xb1, 0x59, 0x65, 0xbc, 0x70, 0x5b, 0x9e,
	0x0b, 0x53, 0xaf, 0x47, 0xb2, 0x21, 0xa9, 0xa3, 0x3d, 0xf9, 0x16, 0x01, 0x4e, 0xe0, 0xbc, 0xf4,
	0xf5, 0x06, 0x2f, 0xc9, 0x08, 0x05, 0xbe, 0x85, 0x91, 0x53, 0xa2, 0xb4, 0x86, 0xa7, 0xd6, 0xf1,
	0x70, 0x00, 0x1b, 0x85, 0x4b, 0x09, 0x60, 0x69, 0xdd, 0x23, 0xc5, 0xf8, 0x19, 0x66, 0xe1, 0x36,
	0x32, 0x9a, 0x8a, 0x1b, 0xeb, 0x0f, 0x4f, 0x0e, 0xa9, 0xe7, 0x2a, 0x0a, 0xf5, 0x80, 0x0f, 0x0d,
	0x8c, 0x53, 0xb8, 0xa8, 0x0f, 0xac, 0x4a, 0x36, 0x26, 0x31, 0x56, 0xf8, 0x14, 0x7a, 0x85, 0xb3,
	0xb2, 0x4a, 0x3c, 0xf7, 0xdb, 0x42, 0xb1, 0x49, 0x78, 0xde, 0x31, 0xfb, 0xb9, 0x2d, 0x54, 0xbd,
	0xa8, 0xc4, 0x56, 0xc6, 0xbb, 0x2d, 0xfb, 0x3f, 0x2c, 0x2a, 0x96, 0xf8, 0x01, 0xc6, 0xbb, 0x66,
	0xa9, 0xca, 0xc4, 0xe9, 0x82, 0x46, 0x99, 0x92, 0x85, 0x11, 0x2d, 0x0e, 0x04, 0x6f, 0xa0, 0x73,
	0xb8, 0xe2, 0x2b, 0xd2, 0xda, 0xc9, 0xee, 0x7a, 0x6f, 0xa0, 0x23, 0xa4, 0x74, 0xaa, 0x2c, 0xf9,
	0x9c, 0xb1, 0x00, 0x63, 0x30, 0x6f, 0xc2, 0x3b, 0x36, 0x3b, 0x82, 0x77, 0xf5, 0xc3, 0xde, 0xcd,
	0xf1, 0xbb, 0x12, 0xc6, 0xd7, 0xcf, 0xeb, 0x3a, 0xec, 0x30, 0xe6, 0x3f, 0x62, 0xbc, 0xbe, 0xa0,
	0xbf, 0xf9, 0xc7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x03, 0x76, 0x76, 0xf9, 0x03, 0x00,
	0x00,
}
